#!/usr/bin/env bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã GalaxyDevelopment

set -e

echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã GalaxyDevelopment..."
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
check_endpoint() {
    local url=$1
    local name=$2
    local timeout=${3:-5}
    
    if curl -s --connect-timeout $timeout "$url" > /dev/null 2>&1; then
        echo "‚úÖ $name: OK"
        return 0
    else
        echo "‚ùå $name: –ù–ï–î–û–°–¢–£–ü–ï–ù"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
check_container() {
    local container_name=$1
    local status=$(docker-compose ps -q $container_name | xargs docker inspect --format='{{.State.Status}}' 2>/dev/null)
    
    if [ "$status" = "running" ]; then
        echo "‚úÖ $container_name: –ó–ê–ü–£–©–ï–ù"
        return 0
    else
        echo "‚ùå $container_name: –ù–ï –ó–ê–ü–£–©–ï–ù ($status)"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
echo "üîß –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞:"
check_container "zookeeper"
check_container "kafka" 
check_container "postgres"
check_container "redis"

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ AI-–∞–≥–µ–Ω—Ç–æ–≤
echo "ü§ñ AI-–∞–≥–µ–Ω—Ç—ã:"
check_container "research-agent"
check_container "composer-agent"
check_container "reviewer-agent"
check_container "integrator-agent"
check_container "publisher-agent"

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
echo "üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
check_container "prometheus"
check_container "grafana"

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
echo "üåê HTTP —Å–µ—Ä–≤–∏—Å—ã:"
check_endpoint "http://localhost:3000" "Grafana Dashboard"
check_endpoint "http://localhost:9090" "Prometheus"
check_endpoint "http://localhost:8000/metrics" "ResearchAgent metrics"
check_endpoint "http://localhost:8001/metrics" "ComposerAgent metrics"

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:"
if docker-compose exec -T postgres pg_isready -U galaxy -d galaxydevelopment > /dev/null 2>&1; then
    echo "‚úÖ PostgreSQL: OK"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
    table_count=$(docker-compose exec -T postgres psql -U galaxy -d galaxydevelopment -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';" | tr -d ' ')
    echo "  üìä –¢–∞–±–ª–∏—Ü –≤ –ë–î: $table_count"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤ –≤ –ë–î
    agent_count=$(docker-compose exec -T postgres psql -U galaxy -d galaxydevelopment -t -c "SELECT COUNT(*) FROM agents WHERE status = 'active';" | tr -d ' ' 2>/dev/null || echo "0")
    echo "  ü§ñ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤: $agent_count"
else
    echo "‚ùå PostgreSQL: –ù–ï–î–û–°–¢–£–ü–ï–ù"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Kafka —Ç–æ–ø–∏–∫–æ–≤
echo "üì® Kafka —Ç–æ–ø–∏–∫–∏:"
if docker-compose exec -T kafka kafka-topics --bootstrap-server localhost:9092 --list > /dev/null 2>&1; then
    topics=$(docker-compose exec -T kafka kafka-topics --bootstrap-server localhost:9092 --list | grep -E "(research|composer|reviewer|integrator|publisher|status)" | wc -l)
    echo "‚úÖ Kafka: OK ($topics —Ç–æ–ø–∏–∫–æ–≤)"
else
    echo "‚ùå Kafka: –ù–ï–î–û–°–¢–£–ü–ï–ù"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –∞–≥–µ–Ω—Ç–æ–≤
echo "üìù –õ–æ–≥–∏ –∞–≥–µ–Ω—Ç–æ–≤:"
log_files=("research_agent.log" "composer_agent.log")
for log_file in "${log_files[@]}"; do
    if [ -f "logs/$log_file" ]; then
        size=$(du -h "logs/$log_file" | cut -f1)
        echo "  üìÑ $log_file: $size"
    else
        echo "  üìÑ $log_file: –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
done

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
echo "üíª –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
echo "  üî∑ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
docker stats --no-stream --format "table {{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}" | head -10

echo ""

# –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å
failed_checks=0

# –ü–æ–¥—Å—á–µ—Ç –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
for container in "zookeeper" "kafka" "postgres" "redis" "research-agent" "composer-agent" "prometheus" "grafana"; do
    if ! docker-compose ps -q $container | xargs docker inspect --format='{{.State.Status}}' 2>/dev/null | grep -q "running"; then
        ((failed_checks++))
    fi
done

echo "üìã –°–í–û–î–ö–ê:"
total_checks=8
successful_checks=$((total_checks - failed_checks))
echo "  ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: $successful_checks/$total_checks"
echo "  ‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: $failed_checks/$total_checks"

if [ $failed_checks -eq 0 ]; then
    echo "  üü¢ –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã: –ó–î–û–†–û–í–ê"
    exit 0
elif [ $failed_checks -le 2 ]; then
    echo "  üü° –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã: –ß–ê–°–¢–ò–ß–ù–û –†–ê–ë–û–¢–ê–ï–¢"
    exit 1
else
    echo "  üî¥ –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã: –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´"
    exit 2
fi