#!/usr/bin/env python3
"""
–†–ï–ê–õ–¨–ù–´–ô –¢–ï–°–¢ ResearchAgent –ë–ï–ó –ú–û–ö–û–í
"""

import asyncio
import os
import sys
sys.path.append('/Volumes/Z7S/development/ALBERT_TOOLS_PLACE/DocumentsSystem')
from AGENTS.research.research_agent import ResearchAgent

async def test_real_research():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π ResearchAgent —Å Gemini"""
    
    # –¢–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π API –∫–ª—é—á
    api_key = "AIzaSyBerqRh6LgbXMowDY-4IjwGTsN7R1SCsz4"
    
    agent = ResearchAgent(gemini_api_key=api_key)
    
    print("\nüî• –¢–ï–°–¢–ò–†–£–ï–ú RESEARCHAGENT –° GEMINI üî•\n")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
    print("üìç –¢–µ—Å—Ç 1: –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ Multi-Agent —Å–∏—Å—Ç–µ–º")
    task_id = await agent.initiate_research(
        query="–ö–∞–∫ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å Multi-Agent —Å–∏—Å—Ç–µ–º—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏",
        sources=["gemini"],
        depth=3
    )
    
    # –ñ–¥–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    await asyncio.sleep(5)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    status = await agent.get_research_status(task_id)
    print(f"–°—Ç–∞—Ç—É—Å: {status['status']}")
    print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {status.get('message', '')}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    if status['status'] == 'COMPLETED':
        results = await agent.get_research_results(task_id)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {results['results'][:500]}...")  # –ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤
    
    # –¢–µ—Å—Ç 2: –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
    print("\nüìç –¢–µ—Å—Ç 2: –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–∞")
    context_docs = [
        "–ü—Ä–æ–µ–∫—Ç Galaxy Development - —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏",
        "–ò—Å–ø–æ–ª—å–∑—É–µ–º 5 –∞–≥–µ–Ω—Ç–æ–≤: ResearchAgent, ComposerAgent, ReviewerAgent, IntegratorAgent, PublisherAgent",
        "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: Multi-Agent System —Å Event-Driven –ø–æ–¥—Ö–æ–¥–æ–º"
    ]
    
    task_id2 = await agent.initiate_research(
        query="–ö–∞–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∞–≥–µ–Ω—Ç–æ–≤",
        sources=["gemini"],
        depth=2
    )
    
    await asyncio.sleep(5)
    
    status2 = await agent.get_research_status(task_id2)
    print(f"–°—Ç–∞—Ç—É—Å: {status2['status']}")
    
    if status2['status'] == 'COMPLETED':
        results2 = await agent.get_research_results(task_id2)
        print(f"–ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(results2['results'])}")
    
    print("\n‚úÖ –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´!")

if __name__ == "__main__":
    asyncio.run(test_real_research())