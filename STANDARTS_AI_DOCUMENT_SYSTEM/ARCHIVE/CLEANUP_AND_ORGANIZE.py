#!/usr/bin/env python3
"""
üíÄ CLEANUP AND ORGANIZE
–ù–∞–≤–æ–¥–∏–º –ø–æ—Ä—è–¥–æ–∫ –≤ –ø—Ä–æ–µ–∫—Ç–µ!
by FORGE & ALBERT üî•
"""

import os
import shutil
from pathlib import Path
from datetime import datetime

def cleanup_project():
    """–ß–∏—Å—Ç–∏–º –∏ –æ—Ä–≥–∞–Ω–∏–∑—É–µ–º –ø—Ä–æ–µ–∫—Ç"""
    
    project_root = Path("/Volumes/Z7S/development/ALBERT_TOOLS_PLACE/DocumentsSystem")
    
    print("üíÄ –ù–ê–í–û–î–ò–ú –ü–û–†–Ø–î–û–ö –í –ü–†–û–ï–ö–¢–ï!")
    print("="*50)
    
    # 1. –£–¥–∞–ª—è–µ–º –≤—Å–µ ._* —Ñ–∞–π–ª—ã (–º—É—Å–æ—Ä –æ—Ç macOS)
    print("\nüóëÔ∏è –£–î–ê–õ–Ø–ï–ú –ú–£–°–û–†–ù–´–ï –§–ê–ô–õ–´...")
    trash_count = 0
    for root, dirs, files in os.walk(project_root):
        for file in files:
            if file.startswith("._"):
                file_path = Path(root) / file
                try:
                    file_path.unlink()
                    trash_count += 1
                except:
                    pass
    print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –º—É—Å–æ—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {trash_count}")
    
    # 2. –°–æ–∑–¥–∞—ë–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
    print("\nüìÅ –°–û–ó–î–ê–Å–ú –ü–†–ê–í–ò–õ–¨–ù–£–Æ –°–¢–†–£–ö–¢–£–†–£...")
    
    folders = {
        "00_DOCUMENTATION": ["README", "ARCHITECTURE", "GUIDES"],
        "11_SCRIPTS": ["executors", "validators", "generators"],
        "12_CONFIGS": ["env", "docker", "kubernetes"],
        "13_ARCHIVE": ["old", "deprecated", "temp"]
    }
    
    for main_folder, subfolders in folders.items():
        main_path = project_root / main_folder
        main_path.mkdir(exist_ok=True)
        for sub in subfolders:
            (main_path / sub).mkdir(exist_ok=True)
    
    # 3. –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞–ø–∫–∏
    print("\nüì¶ –û–†–ì–ê–ù–ò–ó–£–ï–ú –§–ê–ô–õ–´...")
    moved = 0
    
    # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
    for file in project_root.glob("*.md"):
        if file.name not in ["README.md"]:  # README –æ—Å—Ç–∞–µ—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ
            target = project_root / "00_DOCUMENTATION" / "GUIDES" / file.name
            try:
                shutil.move(str(file), str(target))
                moved += 1
                print(f"   üìÑ {file.name} -> 00_DOCUMENTATION/GUIDES/")
            except:
                pass
    
    # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã
    for file in project_root.glob("*.py"):
        if "executor" in file.name.lower() or "P1" in file.name:
            target = project_root / "11_SCRIPTS" / "executors" / file.name
            try:
                shutil.move(str(file), str(target))
                moved += 1
                print(f"   üêç {file.name} -> 11_SCRIPTS/executors/")
            except:
                pass
    
    # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏
    for file in project_root.glob("*.log"):
        target = project_root / "13_ARCHIVE" / "old" / file.name
        try:
            shutil.move(str(file), str(target))
            moved += 1
        except:
            pass
    
    print(f"\n‚úÖ –ü–µ—Ä–µ–º–µ—â–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {moved}")
    
    # 4. –°–æ–∑–¥–∞—ë–º –∏–Ω–¥–µ–∫—Å–Ω—ã–π —Ñ–∞–π–ª
    print("\nüìù –°–û–ó–î–ê–Å–ú –ò–ù–î–ï–ö–° –ü–†–û–ï–ö–¢–ê...")
    
    index_content = f"""# PROJECT STRUCTURE INDEX
Generated: {datetime.now().strftime('%Y-%m-%d %H:%M')}

## üìÅ MAIN DIRECTORIES

### ACTIVE WORK
- `00_PROJECT_MANAGEMENT/` - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–º
- `01_AGENTS/` - AI –∞–≥–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã
- `02_DATA/` - –î–∞–Ω–Ω—ã–µ –∏ –∫—ç—à
- `03_TEMPLATES/` - –®–∞–±–ª–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
- `04_STANDARDS/` - –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –∏ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏
- `05_ROLES/` - –ü—Ä–æ—Ñ–∏–ª–∏ —Ä–æ–ª–µ–π (35 —Ä–æ–ª–µ–π)
- `06_PROCESSES/` - –û–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (P1-P7)
- `07_DELIVERABLES/` - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã
- `08_LOGS/` - –õ–æ–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
- `09_JOURNALS/` - –ñ—É—Ä–Ω–∞–ª—ã –æ–ø–µ—Ä–∞—Ü–∏–π
- `10_REPORTS/` - –û—Ç—á–µ—Ç—ã

### SUPPORT
- `00_DOCUMENTATION/` - –í—Å—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞
- `11_SCRIPTS/` - –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
- `12_CONFIGS/` - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
- `13_ARCHIVE/` - –ê—Ä—Ö–∏–≤ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤

## üìä STATISTICS
- Total Processes: 25 (from 7 phases)
- Total Roles: 38
- Total Templates: 81
- Total Standards: 5 (need more!)

## üöÄ QUICK START
1. Run executors from `11_SCRIPTS/executors/`
2. Check results in `07_DELIVERABLES/`
3. View reports in `10_REPORTS/`

---
üíÄ FORGE & ALBERT PROJECT üî•
"""
    
    index_path = project_root / "PROJECT_INDEX.md"
    index_path.write_text(index_content)
    print(f"   ‚úÖ PROJECT_INDEX.md —Å–æ–∑–¥–∞–Ω")
    
    # 5. –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\nüìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê...")
    
    # –°—á–∏—Ç–∞–µ–º —á—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å –≤ –∫–æ—Ä–Ω–µ
    root_files = list(project_root.glob("*.*"))
    root_files = [f for f in root_files if not f.name.startswith("._")]
    
    print(f"   –§–∞–π–ª–æ–≤ –≤ –∫–æ—Ä–Ω–µ: {len(root_files)}")
    print(f"   –ü–∞–ø–æ–∫ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: {len(list(project_root.glob('*/')))} ")
    
    if len(root_files) <= 5:  # README, .env, .gitignore –∏ –ø–∞—Ä–∞ –∫–æ–Ω—Ñ–∏–≥–æ–≤ - —ç—Ç–æ –û–ö
        print("\n‚úÖ –ü–û–†–Ø–î–û–ö –ù–ê–í–ï–î–Å–ù!")
    else:
        print(f"\n‚ö†Ô∏è –í –∫–æ—Ä–Ω–µ –≤—Å—ë –µ—â—ë {len(root_files)} —Ñ–∞–π–ª–æ–≤")
        for f in root_files[:10]:
            print(f"     - {f.name}")
    
    return trash_count, moved

if __name__ == "__main__":
    trash, moved = cleanup_project()
    
    print("\n" + "="*50)
    print(f"üíÄ –£–ë–û–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê! üî•")
    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –º—É—Å–æ—Ä–∞: {trash}")
    print(f"üì¶ –û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {moved}")
    print("="*50)