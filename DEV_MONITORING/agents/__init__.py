#!/usr/bin/env python3
"""
ü§ñ GALAXY AI AGENTS
–°–∏—Å—Ç–µ–º–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
"""

from .research_agent import ResearchAgent
from .reviewer_agent import ReviewerAgent
from .composer_agent import ComposerAgent

__all__ = ['ResearchAgent', 'ReviewerAgent', 'ComposerAgent', 'AgentManager']

class AgentManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è AI –∞–≥–µ–Ω—Ç–∞–º–∏"""
    
    def __init__(self):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–æ–≤
        self.agents = {
            'ResearchAgent': ResearchAgent(),
            'ReviewerAgent': ReviewerAgent(),
            'ComposerAgent': ComposerAgent()
        }
        
        self.task_queue = []
        self.active_tasks = {}
        self.completed_tasks = []
    
    def get_agent(self, agent_name: str):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞ –ø–æ –∏–º–µ–Ω–∏"""
        return self.agents.get(agent_name)
    
    def list_agents(self):
        """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤"""
        return [agent.get_status() for agent in self.agents.values()]
    
    def submit_task(self, agent_name: str, task: dict):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–¥–∞—á–∏ –∞–≥–µ–Ω—Ç—É"""
        agent = self.get_agent(agent_name)
        if not agent:
            return {"error": f"Agent {agent_name} not found"}
        
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
        result = agent.execute_task(task)
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        self.completed_tasks.append({
            "agent": agent_name,
            "task": task,
            "result": result,
            "timestamp": __import__('datetime').datetime.now().isoformat()
        })
        
        return result
    
    def get_all_status(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤"""
        return {
            name: agent.get_status() 
            for name, agent in self.agents.items()
        }
    
    def get_statistics(self):
        """–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –∞–≥–µ–Ω—Ç–æ–≤"""
        stats = {
            "total_tasks": len(self.completed_tasks),
            "agents": {}
        }
        
        for name, agent in self.agents.items():
            stats["agents"][name] = agent.stats
        
        return stats