#!/bin/bash

# GalaxyDevelopers DevSystem - –ì–ª–∞–≤–Ω—ã–π —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç
# –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É + DOC_SYSTEM –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ

set -e

GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

PROJECT_ROOT="/Volumes/Z7S/development/GalaxyDevelopers/DevSystem"
cd "$PROJECT_ROOT"

echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${BLUE}‚ïë          GALAXY DEVELOPERS DEVSYSTEM - –ó–ê–ü–£–°–ö               ‚ïë${NC}"
echo -e "${BLUE}‚ïë          –û—Å–Ω–æ–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ + DOC_SYSTEM                      ‚ïë${NC}"
echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è DOC_SYSTEM
echo -e "${YELLOW}üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DOC_SYSTEM...${NC}"

if [ ! -d "$PROJECT_ROOT/DOC_SYSTEM" ]; then
    echo -e "${RED}‚ùå DOC_SYSTEM –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!${NC}"
    exit 1
fi

# –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è DOC_SYSTEM
pip3 install -q flask flask-cors pyyaml jinja2 networkx watchdog 2>/dev/null || true

# –°–æ–∑–¥–∞–Ω–∏–µ Git hooks –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
if [ -d "$PROJECT_ROOT/.git" ]; then
    echo -e "${YELLOW}üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git hooks –¥–ª—è –∞–≤—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...${NC}"
    
    cat > "$PROJECT_ROOT/.git/hooks/pre-commit" << 'EOF'
#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è DOC_SYSTEM –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º

PROJECT_ROOT="/Volumes/Z7S/development/GalaxyDevelopers/DevSystem"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
python3 "$PROJECT_ROOT/DOC_SYSTEM/hooks/pre_commit.py" 2>/dev/null || {
    echo "‚ö†Ô∏è –í–∞–ª–∏–¥–∞—Ü–∏—è DOC_SYSTEM –ø—Ä–æ–ø—É—â–µ–Ω–∞ (–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–µ –≥–æ—Ç–æ–≤—ã)"
    exit 0
}
EOF

    cat > "$PROJECT_ROOT/.git/hooks/post-commit" << 'EOF'
#!/bin/bash
# –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –∫–æ–º–º–∏—Ç–∞

PROJECT_ROOT="/Volumes/Z7S/development/GalaxyDevelopers/DevSystem"

# –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –≤ —Ñ–æ–Ω–µ
python3 "$PROJECT_ROOT/DOC_SYSTEM/hooks/post_commit.py" &
EOF

    chmod +x "$PROJECT_ROOT/.git/hooks/pre-commit"
    chmod +x "$PROJECT_ROOT/.git/hooks/post-commit"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ hook-—Å–∫—Ä–∏–ø—Ç–æ–≤ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
mkdir -p "$PROJECT_ROOT/DOC_SYSTEM/hooks"

if [ ! -f "$PROJECT_ROOT/DOC_SYSTEM/hooks/pre_commit.py" ]; then
    cat > "$PROJECT_ROOT/DOC_SYSTEM/hooks/pre_commit.py" << 'EOF'
#!/usr/bin/env python3
import sys
import subprocess
from pathlib import Path

try:
    sys.path.insert(0, str(Path(__file__).parent.parent))
    from validators.validation_agent import ValidationAgent
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    result = subprocess.run(['git', 'diff', '--cached', '--name-only'], 
                          capture_output=True, text=True)
    
    if result.returncode != 0:
        sys.exit(0)
    
    files = [f for f in result.stdout.strip().split('\n') if f.strip()]
    if not files:
        sys.exit(0)
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
    validator = ValidationAgent()
    has_critical = False
    
    for file_path_str in files:
        file_path = Path(file_path_str)
        if file_path.exists() and file_path.suffix in ['.py', '.js', '.ts']:
            results = validator.validate_file(file_path)
            
            for result in results:
                if not result.get('passed', True) and result['level'] == 'critical':
                    print(f"üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê {file_path}: {result['message']}")
                    has_critical = True
    
    sys.exit(1 if has_critical else 0)
    
except Exception:
    # –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º –∫–æ–º–º–∏—Ç
    sys.exit(0)
EOF
fi

if [ ! -f "$PROJECT_ROOT/DOC_SYSTEM/hooks/post_commit.py" ]; then
    cat > "$PROJECT_ROOT/DOC_SYSTEM/hooks/post_commit.py" << 'EOF'
#!/usr/bin/env python3
import sys
from pathlib import Path

try:
    sys.path.insert(0, str(Path(__file__).parent.parent))
    from core.file_monitor import FileMonitor
    from generators.doc_generator import DocumentationGenerator
    
    # –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    monitor = FileMonitor()
    generator = DocumentationGenerator()
    
    metadata = monitor.scan_directory()
    project_doc = generator.generate_project_documentation(metadata)
    generator.update_claude_context(project_doc)
    
    print("‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
    
except Exception as e:
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: {e}")

sys.exit(0)
EOF
fi

chmod +x "$PROJECT_ROOT/DOC_SYSTEM/hooks/pre_commit.py"
chmod +x "$PROJECT_ROOT/DOC_SYSTEM/hooks/post_commit.py"

# –ó–∞–ø—É—Å–∫ DOC_SYSTEM API –≤ —Ñ–æ–Ω–µ
echo -e "${YELLOW}üåê –ó–∞–ø—É—Å–∫ DOC_SYSTEM API...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ
if lsof -i:37777 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ DOC_SYSTEM API —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 37777${NC}"
else
    # –ó–∞–ø—É—Å–∫–∞–µ–º API –≤ —Ñ–æ–Ω–µ
    nohup python3 "$PROJECT_ROOT/DOC_SYSTEM/api/server.py" > "$PROJECT_ROOT/DOC_SYSTEM/logs/api.log" 2>&1 &
    API_PID=$!
    echo $API_PID > "$PROJECT_ROOT/DOC_SYSTEM/api.pid"
    
    sleep 2
    
    if kill -0 $API_PID 2>/dev/null; then
        echo -e "${GREEN}‚úÖ DOC_SYSTEM API –∑–∞–ø—É—â–µ–Ω (PID: $API_PID)${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è DOC_SYSTEM API –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å${NC}"
    fi
fi

# –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ñ–∞–π–ª–æ–≤ –≤ —Ñ–æ–Ω–µ
echo -e "${YELLOW}üëÅÔ∏è –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ñ–∞–π–ª–æ–≤...${NC}"

if [ ! -f "$PROJECT_ROOT/DOC_SYSTEM/monitor.pid" ] || ! kill -0 $(cat "$PROJECT_ROOT/DOC_SYSTEM/monitor.pid" 2>/dev/null) 2>/dev/null; then
    nohup python3 -c "
import sys
sys.path.insert(0, '$PROJECT_ROOT/DOC_SYSTEM')
from core.file_monitor import FileMonitor
monitor = FileMonitor()
monitor.start_monitoring()
" > "$PROJECT_ROOT/DOC_SYSTEM/logs/monitor.log" 2>&1 &
    
    MONITOR_PID=$!
    echo $MONITOR_PID > "$PROJECT_ROOT/DOC_SYSTEM/monitor.pid"
    echo -e "${GREEN}‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ñ–∞–π–ª–æ–≤ –∑–∞–ø—É—â–µ–Ω (PID: $MONITOR_PID)${NC}"
else
    echo -e "${GREEN}‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ñ–∞–π–ª–æ–≤ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
fi

# –ü–µ—Ä–≤–∏—á–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
echo -e "${YELLOW}üìö –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...${NC}"
python3 -c "
import sys
sys.path.insert(0, '$PROJECT_ROOT/DOC_SYSTEM')

try:
    from core.file_monitor import FileMonitor
    from generators.doc_generator import DocumentationGenerator
    
    monitor = FileMonitor()
    generator = DocumentationGenerator()
    
    metadata = monitor.scan_directory()
    project_doc = generator.generate_project_documentation(metadata)
    generator.update_claude_context(project_doc)
    
    print('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞')
    print(f'üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è {len(metadata)} —Ñ–∞–π–ª–æ–≤')
    
except Exception as e:
    print(f'‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}')
" 2>/dev/null || echo -e "${YELLOW}‚ö†Ô∏è –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ${NC}"

echo ""
echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${GREEN}‚ïë              GALAXY DEVSYSTEM –ê–ö–¢–ò–í–ù–ê! üöÄ                   ‚ïë${NC}"
echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""
echo -e "${BLUE}DOC_SYSTEM Endpoints:${NC}"
echo -e "  ${GREEN}http://localhost:37777/api/status${NC}       - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
echo -e "  ${GREEN}http://localhost:37777/api/files${NC}        - –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤"
echo -e "  ${GREEN}http://localhost:37777/api/documentation${NC} - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"
echo ""
echo -e "${BLUE}–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:${NC}"
echo -e "  üîç –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤"
echo -e "  üìö AI-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–∏ –∫–æ–º–º–∏—Ç–∞—Ö"
echo -e "  üîó –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –º–µ–∂–¥—É —Ñ–∞–π–ª–∞–º–∏"
echo -e "  üóÇÔ∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ orphaned —Ñ–∞–π–ª–æ–≤"
echo -e "  üìù –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ CLAUDE.md –¥–ª—è AI-–∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"
echo ""

# –ó–∞–ø—É—Å–∫ FORGE Bridge –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏
echo -e "${BLUE}üî• –ó–∞–ø—É—Å–∫ FORGE Bridge...${NC}"
if ! pgrep -f "forge_claude.sh" > /dev/null; then
    nohup /Users/safiullins_pro/forge_claude.sh > /dev/null 2>&1 &
    echo -e "${GREEN}‚úÖ FORGE Bridge –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω${NC}"
else
    echo -e "${GREEN}‚úÖ FORGE Bridge —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
fi

# –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É Galaxy
echo -e "${BLUE}üåå –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã Galaxy...${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
if [ -f "$PROJECT_ROOT/SCRIPTS/start_galaxy.sh" ]; then
    exec "$PROJECT_ROOT/SCRIPTS/start_galaxy.sh"
elif [ -f "$PROJECT_ROOT/start.sh" ]; then
    exec "$PROJECT_ROOT/start.sh"
elif [ -f "$PROJECT_ROOT/interface/index.html" ]; then
    echo -e "${GREEN}–û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Galaxy...${NC}"
    open "$PROJECT_ROOT/interface/index.html"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    cd "$PROJECT_ROOT/interface"
    python3 -m http.server 8080 &
    echo -e "${GREEN}Galaxy –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω: http://localhost:8080${NC}"
    echo -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤${NC}"
    
    # –û–∂–∏–¥–∞–µ–º —Å–∏–≥–Ω–∞–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    trap 'echo -e "\n${YELLOW}–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"; kill $(jobs -p) 2>/dev/null; exit 0' SIGINT SIGTERM
    
    while true; do
        sleep 1
    done
else
    echo -e "${GREEN}Galaxy DevSystem –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!${NC}"
    echo -e "${YELLOW}DOC_SYSTEM —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é${NC}"
fi