#!/bin/bash
# –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π —Å–ø–∞–º–∞

WATCH_DIRS=(
    "$HOME/Desktop"
    "$HOME/Downloads"
    "$HOME/Documents"
)

FILE_TYPES=(
    "*.pdf"
    "*.png"
    "*.jpg"
    "*.txt"
    "*.md"
    "*.json"
)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–±—ã—Ç–∏–π –¥–ª—è –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏
declare -A LAST_EVENTS
COOLDOWN_SECONDS=2

notify_claude() {
    local file="$1"
    local event="$2"
    local filename=$(basename "$file")
    local dir=$(dirname "$file")
    
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ backup —Ñ–∞–π–ª—ã
    if [[ "$filename" =~ \.tmp\.|~$|\.swp$|\.DS_Store|#.*# ]]; then
        return
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º cooldown –¥–ª—è —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞
    local file_key="${file}"
    local current_time=$(date +%s)
    local last_time=${LAST_EVENTS[$file_key]:-0}
    local time_diff=$((current_time - last_time))
    
    if [ $time_diff -lt $COOLDOWN_SECONDS ]; then
        # –°–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        return
    fi
    
    LAST_EVENTS[$file_key]=$current_time
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    local extension="${filename##*.}"
    
    case "$extension" in
        pdf)
            msg="üìÑ –ù–æ–≤—ã–π PDF –¥–æ–∫—É–º–µ–Ω—Ç: $filename"
            ;;
        png|jpg|jpeg)
            msg="üñºÔ∏è –ù–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: $filename"
            ;;
        txt|md)
            msg="üìù –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: $filename"
            ;;
        json)
            msg="üîß –ù–æ–≤—ã–π JSON —Ñ–∞–π–ª: $filename"
            ;;
        *)
            msg="üìé –ù–æ–≤—ã–π —Ñ–∞–π–ª: $filename"
            ;;
    esac
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Claude Code (—Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏)
    (
        sleep 0.5
        osascript <<EOF
tell application "iTerm2"
    tell current window
        tell current session
            write text ""
            write text "=== –§–ê–ô–õ–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï ==="
            write text "$msg"
            write text "–ü—É—Ç—å: $file"
            write text "–°–æ–±—ã—Ç–∏–µ: $event"
            write text "–í—Ä–µ–º—è: $(date '+%H:%M:%S')"
            write text "---"
            write text "–ü—Ä–æ–≤–µ—Ä—å —ç—Ç–æ—Ç —Ñ–∞–π–ª: $file"
            write text ""
        end tell
    end tell
end tell
EOF
    ) &
}

echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é —É–ª—É—á—à–µ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π"
echo "üìÇ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
for dir in "${WATCH_DIRS[@]}"; do
    echo "  - $dir"
done
echo "‚èπÔ∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
echo ""

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –∫–∞–∂–¥—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
for dir in "${WATCH_DIRS[@]}"; do
    if [ -d "$dir" ]; then
        fswatch -0 -r \
            --event Created \
            --event Updated \
            --exclude ".*\.tmp\..*" \
            --exclude ".*~$" \
            --exclude "\.DS_Store" \
            "$dir" | while read -d "" file
        do
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
            for pattern in "${FILE_TYPES[@]}"; do
                if [[ $(basename "$file") == $pattern ]]; then
                    notify_claude "$file" "—Å–æ–∑–¥–∞–Ω/–∏–∑–º–µ–Ω–µ–Ω"
                    break
                fi
            done
        done &
    fi
done

wait