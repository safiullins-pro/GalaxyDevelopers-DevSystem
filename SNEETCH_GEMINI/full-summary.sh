#!/bin/bash

SOURCE_DIR="$HOME/–í –ü–ï–†–ü–õ–ï–ö–°–ò–¢–ò"
OUTPUT_DIR="/Volumes/Z7S/development/GalaxyDevelopments/GEMINI_ANALYSIS_RESULTS"
API_KEY="AIzaSyB4LZKDKzII5UeaStDovodbvVVfxPWPdD8"

mkdir -p "$OUTPUT_DIR"

echo "–û–±—ä–µ–¥–∏–Ω—è—é –≤—Å–µ —Ñ–∞–π–ª—ã –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞..."

# –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –æ–¥–∏–Ω
COMBINED_FILE="/tmp/all_data_combined.txt"
> "$COMBINED_FILE"

for file in "$SOURCE_DIR"/*.txt; do
    if [ -f "$file" ]; then
        cat "$file" >> "$COMBINED_FILE"
        echo -e "\n---\n" >> "$COMBINED_FILE"
    fi
done

# –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä
FILE_SIZE=$(wc -c < "$COMBINED_FILE")
echo "–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: $FILE_SIZE –±–∞–π—Ç"

# –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 30000 —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
HEAD_CONTENT=$(head -c 30000 "$COMBINED_FILE")

echo "–û—Ç–ø—Ä–∞–≤–ª—è—é –Ω–∞ –∞–Ω–∞–ª–∏–∑ –≤ Gemini..."

# –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å
cat > /tmp/gemini_request.json <<EOF
{
  "contents": [{
    "parts": [{
      "text": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ–∑–¥–∞–π –°–£–ü–ï–†-–î–ï–¢–ê–õ–¨–ù–´–ô –æ—Ç—á–µ—Ç –Ω–∞ 60000 —Ç–æ–∫–µ–Ω–æ–≤. 

–í–ê–ñ–ù–û:
1. –ù–∞–π–¥–∏ –í–°–ï —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å–ª–æ–≤–∞ 'forge' –≤ –ª—é–±–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
2. –û–ø—Ä–µ–¥–µ–ª–∏ –æ —á–µ–º –≤–æ–æ–±—â–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ - —á—Ç–æ –∑–∞ –ø—Ä–æ–µ–∫—Ç—ã, –∫–∞–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –∫–∞–∫–∏–µ –∑–∞–¥–∞—á–∏
3. –í—ã–¥–µ–ª–∏ –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏ –∏–Ω—Å–∞–π—Ç—ã
4. –ö–∞–∫–∏–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã –æ–±—Å—É–∂–¥–∞–ª–∏—Å—å
5. –ö–∞–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Ä–µ—à–∞–ª–∏—Å—å
6. –ö–∞–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å

–î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:

$(echo "$HEAD_CONTENT" | sed 's/\\/\\\\/g' | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')"
    }]
  }],
  "generationConfig": {
    "temperature": 0.7,
    "maxOutputTokens": 8192
  }
}
EOF

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
OUTPUT_FILE="$OUTPUT_DIR/FULL_SUMMARY_$(date +%Y%m%d_%H%M%S).md"

curl -s -X POST \
  -H "Content-Type: application/json" \
  -d @/tmp/gemini_request.json \
  "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=$API_KEY" \
  | python3 -c "
import sys, json
data = json.load(sys.stdin)
if 'candidates' in data and data['candidates']:
    text = data['candidates'][0].get('content', {}).get('parts', [{}])[0].get('text', 'No response')
    print(text)
else:
    print('Error:', json.dumps(data, indent=2))
" > "$OUTPUT_FILE"

echo ""
echo "–ê–Ω–∞–ª–∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $OUTPUT_FILE"
echo ""
echo "–ü—Ä–æ–≤–µ—Ä—è—é –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è forge..."
if grep -i "forge" "$OUTPUT_FILE"; then
    echo ""
    echo "üî¥ FORGE –ù–ê–ô–î–ï–ù –í –ê–ù–ê–õ–ò–ó–ï!"
else
    echo "Forge –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∞–Ω–∞–ª–∏–∑–µ"
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª–æ –∞–Ω–∞–ª–∏–∑–∞
echo ""
echo "–ù–∞—á–∞–ª–æ –∞–Ω–∞–ª–∏–∑–∞:"
echo "==============="
head -50 "$OUTPUT_FILE"